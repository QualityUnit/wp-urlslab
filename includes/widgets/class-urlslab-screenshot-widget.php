<?php

class Urlslab_Screenshot_Widget extends Urlslab_Widget {
	const SLUG = 'urlslab-screenshot';


	const SETTING_NAME_UPDATE_FREQ = 'urlslab-scr-update-freq';


	public function init_widget() {
		Urlslab_Loader::get_instance()->add_action( 'init', $this, 'hook_callback', 10, 0 );
	}

	public function hook_callback() {
		add_shortcode( $this->get_widget_slug(), array( $this, 'get_shortcode_content' ) );
	}


	/**
	 * @return string
	 */
	public function get_widget_slug(): string {
		return Urlslab_Screenshot_Widget::SLUG;
	}

	/**
	 * @return string
	 */
	public function get_widget_title(): string {
		return __( 'Automated Screenshots' );
	}

	/**
	 * @return string
	 */
	public function get_widget_description(): string {
		return __( 'Improve the appeal of the content by creating automatically generated screenshots' );
	}

	public function get_shortcode_content( $atts = array(), $content = null, $tag = '' ): string {
		$atts = array_change_key_case( (array) $atts );

		$urlslab_atts = shortcode_atts(
			array(
				'width'           => '100%',
				'height'          => '100%',
				'alt'             => 'Screenshot taken by URLsLab service',
				'default-image'   => '',
				'url'             => 'https://www.urlslab.com',
				'screenshot-type' => Urlslab_Url_Row::SCREENSHOT_TYPE_CAROUSEL,
			),
			$atts,
			$tag
		);


		try {
			if ( ! empty( $urlslab_atts['url'] ) ) {
				$url_data = Urlslab_Url_Data_Fetcher::get_instance()->fetch_schedule_url( new Urlslab_Url( $urlslab_atts['url'] ) );

				if ( ! empty( $url_data ) && ! $url_data->is_http_valid() ) {
					$alt_text = $url_data->get_summary_text( Urlslab_Link_Enhancer::DESC_TEXT_SUMMARY );
					if ( empty( $alt_text ) ) {
						$alt_text = $urlslab_atts['alt'];
					}

					$screenshot_url = $url_data->get_screenshot_url( $urlslab_atts['screenshot-type'] );
					if ( empty( $screenshot_url ) ) {
						$screenshot_url = $urlslab_atts['default-image'];
					}

					if ( empty( $screenshot_url ) ) {
						return '';
					}

					return $this->render_shortcode( $urlslab_atts['url'], $screenshot_url, $alt_text, $urlslab_atts['width'], $urlslab_atts['height'] );
				}
			}
		} catch ( Exception $e ) {
		}

		return '';
	}

	private function render_shortcode( string $url, string $src, string $alt, string $width, string $height ): string {
		if ( empty( $src ) ) {
			return ' <!-- URLSLAB processing ' . $url . ' -->';
		}

		return sprintf(
			'<div class="urlslab-screenshot-container"><img src="%s" alt="%s" width="%s" height="%s"></div>',
			esc_url( $src ),
			esc_attr( $alt ),
			esc_attr( $width ),
			esc_attr( $height ),
		);
	}

	public function has_shortcode(): bool {
		return true;
	}

	public function is_api_key_required() {
		return true;
	}

	protected function add_options() {
		$this->add_options_form_section( 'schedule', __( 'Synchronization' ), __( 'Screenshots are generated by the URLsLab service. You can adjust the frequency of taking screenshots in the general settings, while the frequency of data synchronization between the URLsLab service and plugin can be configured here.' ) );
		$this->add_option_definition(
			self::SETTING_NAME_UPDATE_FREQ,
			2419200,
			false,
			__( 'Synchronization Frequency with URLsLab service' ),
			__( 'The synchronization frequency of screenshots with the URLsLab service is different from how often URLsLab takes screenshots of the website.' ),
			self::OPTION_TYPE_LISTBOX,
			array(
				86400     => __( 'Daily' ),
				604800    => __( 'Weekly' ),
				2419200   => __( 'Monthly' ),
				7257600   => __( 'Quarterly' ),
				31536000  => __( 'Yearly' ),
				999999999 => __( 'Never' ),
			),
			function( $value ) {
				return is_numeric( $value ) && 0 < $value;
			},
			'schedule'
		);
	}
}
