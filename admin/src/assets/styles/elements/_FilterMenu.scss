/* stylelint-disable selector-class-pattern, no-descending-specificity */

@use "../common/variables" as *;
@use "../common/mixins" as *;
@use "../elements/MenuArrow" as *;
@use "../elements/Inputs" as *;

.urlslab-FilterMenu {
	position: relative;
	z-index: 2;
	max-width: 12em;
	font-size: 0.875rem;
	font-family: OpenSans, sans-serif;
	font-weight: $font-weight-normal;

	.urlslab-table & {
		font-size: inherit;
	}

	&.active {
		z-index: 3;
	}

	&.wide {
		max-width: none;
	}

	&__title {

		@extend %MenuArrow;
		display: flex;
		align-items: center;
		line-height: 1;
		border: 1px solid $grey-medium;
		border-radius: 6px;
		background-color: $white;
		padding: 0.7em 1em;
		transition: all 0.2s;
		min-width: 10em;
		cursor: pointer;

		.urlslab-table & {
			background-color: transparent;
			min-width: auto;
		}

		.urlslab-table th & {
			border: none;

			&::after {
				margin-left: 1em;
			}
		}

		svg {
			margin-right: 0.5em;
		}

		&.active {
			color: $primary-color;
			border-color: currentcolor;
		}

		@media (hover: hover) {

			&:hover {
				color: $primary-color;
				border-color: currentcolor;
			}

			&.active:hover {
				color: $black;
				border-color: $grey-light;
			}
		}
	}

	&__items {
		position: absolute;
		top: calc(100% + 1px);
		left: 0;
		display: none;
		opacity: 0;
		border-radius: 6px;
		background-color: $white;
		width: calc(100% + 5em);
		padding: 1em 1.45em;
		transition: opacity 0.1s;
		filter: drop-shadow(0 1px 6px rgba($black-real, 0.16));

		.wide & {
			left: 0;
			transform: none;
			width: 100%;
		}

		&--inn {

			@include scrollbar(8px);
			max-height: 19em;
			overflow-y: scroll;
			position: relative;
			margin-left: -1.45em;
			margin-right: -1.95em;

			&.has-scrollbar {
				margin-right: -1.45em;
			}
		}

		&.active {
			display: block;
		}

		&.visible {
			opacity: 1;
		}
	}

	label,
	.label {

		&.urlslab-FilterMenu__item {
			display: flex;
			align-content: center;
			padding: 0.5em 1em;
			margin-bottom: 0.25em;

			* {
				font-weight: inherit;
			}

			&:last-of-type {
				margin-bottom: 0;
			}

			&:not(.menuInput) {

				@media (hover: hover) {

					&:hover {
						background-color: $grey-lightest;
					}
				}
			}
		}
	}
}
